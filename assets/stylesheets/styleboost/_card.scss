@use "styleboost/utilities/functions";
@use "styleboost/utilities/properties";
@use "content_columns";

@layer defaults {

	:root {
		--size-c-card-border: 1px;
		--size-c-card-border-inner: 1px;
		--style-c-card-border: solid;
		--size-c-card-spacer-x: 1rem;
		--size-c-card-spacer-y: 0.5rem;
		--size-c-card-body-spacer-y: 1rem;
	}

	.card {

		// Define all the private properties
		--color-p-card-decoration-bg: #{properties.decoratedBackgroundColor('card')};
		--color-p-card-border: #{properties.borderColor('card')};
		--color-p-card-bg: #{properties.backgroundColor('card')};
		--color-p-card-text: #{properties.textColor('card')};

		--size-p-card-border-inner: #{properties.innerBorderWidth('card')};
		--size-p-card-border: #{properties.borderWidth('card')};
		--size-p-card-border-radius: #{properties.borderRadius('card')};
		--style-p-card-border: #{properties.borderStyle('card')};

		--size-p-card-spacer-y: #{properties.miscSize('spacer-y', 'card')};
		--size-p-card-spacer-x: #{properties.miscSize('spacer-x', 'card')};

		--size-p-card-header-spacer-y: var(--size-c-card-header-spacer-y, var(--size-p-card-spacer-y));
		--size-p-card-header-spacer-x: var(--size-c-card-header-spacer-x, var(--size-p-card-spacer-x));
		--size-p-card-header-spacer-y-bottom: var(--size-c-card-header-spacer-y-bottom, var(--size-p-card-header-spacer-y));

		--size-p-card-footer-spacer-y: var(--size-c-card-footer-spacer-y, var(--size-p-card-spacer-y));
		--size-p-card-footer-spacer-x: var(--size-c-card-footer-spacer-y, var(--size-p-card-spacer-x));
		--size-p-card-header-spacer-y-top: var(--size-c-card-footer-spacer-y-top, var(--size-p-card-footer-spacer-y));

		display: flex;
		flex-direction: column;
		position: relative;
		word-wrap: break-word;

		color: var(--color-p-card-text);
		background-color: var(--color-p-card-bg);
		border-color: var(--color-p-card-border);
		border-radius: var(--size-p-card-border-radius);
		border-width: var(--size-p-card-border);
		border-style: var(--style-p-card-border);

		&-footer,
		&-header {
			display: flex;
			justify-content: space-between;
			gap: 1rem;

			> * {
				margin-top: 0;
				margin-bottom: 0;
				align-self: center;
			}
		}

		&-header {
			margin-bottom: 0;
			border-bottom: var(--size-p-card-border-inner) var(--style-p-card-border) var(--color-p-card-border);
			padding: var(--size-p-card-header-spacer-y) var(--size-p-card-header-spacer-x) var(--size-p-card-header-spacer-y-bottom, var(--size-p-card-header-spacer-y));
			background-color: var(--card-color-header-bg, var(--color-p-card-decoration-bg));
			border-radius: var(--size-p-card-border-radius) var(--size-p-card-border-radius) 0 0;
		}

		&-footer {
			margin-top: 0;
			border-top: var(--size-p-card-border-inner) var(--style-p-card-border) var(--color-p-card-border);
			padding: var(--size-p-card-footer-spacer-y) var(--size-p-card-footer-spacer-x) var(--size-p-card-footer-spacer-y-bottom, var(--size-p-card-footer-spacer-y));
			background-color: var(--card-color-footer-bg, var(--color-p-card-decoration-bg));
			border-radius: 0 0 var(--size-p-card-border-radius) var(--size-p-card-border-radius);
		}

		&-body {
			flex: 1 1 auto;
			padding: var(--size-p-card-spacer-y) 0;

			@extend .content-columns;
			--content-column-name: feature;
			--content-column-padding: var(--size-p-card-spacer-x);
		}
	}
}